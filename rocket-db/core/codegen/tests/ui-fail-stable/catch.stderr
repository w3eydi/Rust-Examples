error: expected `fn`
  --- help: `#[catch]` can only be used on functions
 --> $DIR/catch.rs:6:1
  |
6 | struct Catcher(String);
  | ^^^^^^

error: expected `fn`
  --- help: `#[catch]` can only be used on functions
 --> $DIR/catch.rs:9:7
  |
9 | const CATCH: &str = "Catcher";
  |       ^^^^^

error: expected integer or `default`, found string literal
  --- help: `#[catch]` expects a status code int or `default`: `#[catch(404)]` or `#[catch(default)]`
  --> $DIR/catch.rs:11:9
   |
11 | #[catch("404")]
   |         ^^^^^

error: unexpected keyed parameter: expected literal or identifier
  --- help: `#[catch]` expects a status code int or `default`: `#[catch(404)]` or `#[catch(default)]`
  --> $DIR/catch.rs:14:9
   |
14 | #[catch(code = "404")]
   |         ^^^^

error: unexpected keyed parameter: expected literal or identifier
  --- help: `#[catch]` expects a status code int or `default`: `#[catch(404)]` or `#[catch(default)]`
  --> $DIR/catch.rs:17:9
   |
17 | #[catch(code = 404)]
   |         ^^^^

error: status must be in range [100, 599]
  --- help: `#[catch]` expects a status code int or `default`: `#[catch(404)]` or `#[catch(default)]`
  --> $DIR/catch.rs:20:9
   |
20 | #[catch(99)]
   |         ^^

error: status must be in range [100, 599]
  --- help: `#[catch]` expects a status code int or `default`: `#[catch(404)]` or `#[catch(default)]`
  --> $DIR/catch.rs:23:9
   |
23 | #[catch(600)]
   |         ^^^

error: unexpected attribute parameter: `message`
  --- help: `#[catch]` expects a status code int or `default`: `#[catch(404)]` or `#[catch(default)]`
  --> $DIR/catch.rs:26:14
   |
26 | #[catch(400, message = "foo")]
   |              ^^^^^^^

error[E0308]: mismatched types
  --> $DIR/catch.rs:30:17
   |
30 | fn f3(_request: &Request, other: bool) { }
   |                 ^ expected `&rocket::Request<'_>`, found struct `Status`

error[E0308]: mismatched types
  --> $DIR/catch.rs:30:34
   |
30 | fn f3(_request: &Request, other: bool) { }
   |                                  ^^^^ expected `bool`, found `&rocket::Request<'_>`
