error: attribute can only be applied to `async` functions
 --> $DIR/async-entry.rs:4:5
  |
4 |     #[rocket::main]
  |     ^^^^^^^^^^^^^^^
  |
note: this function must be `async`
 --> $DIR/async-entry.rs:5:5
  |
5 |     fn foo() { }
  |     ^^^^^^^^
  = note: this error originates in the attribute macro `rocket::main` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: attribute is typically applied to `main` function
  --> $DIR/async-entry.rs:10:5
   |
10 |     #[rocket::main]
   |     ^^^^^^^^^^^^^^^
   |
note: this function is not `main`
  --> $DIR/async-entry.rs:11:14
   |
11 |     async fn foo() { }
   |              ^^^
   = note: this warning originates in the attribute macro `rocket::main` (in Nightly builds, run with -Z macro-backtrace for more info)

error: attribute can only be applied to `async` functions
  --> $DIR/async-entry.rs:16:5
   |
16 |     #[rocket::main]
   |     ^^^^^^^^^^^^^^^
   |
note: this function must be `async`
  --> $DIR/async-entry.rs:17:5
   |
17 |     fn main() {
   |     ^^^^^^^^^
   = note: this error originates in the attribute macro `rocket::main` (in Nightly builds, run with -Z macro-backtrace for more info)

error: attribute cannot be applied to `main` function
  --> $DIR/async-entry.rs:49:5
   |
49 |     #[rocket::launch]
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: this attribute generates a `main` function
note: this function cannot be `main`
  --> $DIR/async-entry.rs:50:8
   |
50 |     fn main() -> rocekt::Rocket<rocket::Build> {
   |        ^^^^
   = note: this error originates in the attribute macro `rocket::launch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: attribute can only be applied to functions that return a value
  --> $DIR/async-entry.rs:56:5
   |
56 |     #[rocket::launch]
   |     ^^^^^^^^^^^^^^^^^
   |
note: this function must return a value
  --> $DIR/async-entry.rs:57:5
   |
57 |     async fn rocket() {
   |     ^^^^^^^^^^^^^^^^^
   = note: this error originates in the attribute macro `rocket::launch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: attribute can only be applied to functions that return a value
  --> $DIR/async-entry.rs:64:5
   |
64 |     #[rocket::launch]
   |     ^^^^^^^^^^^^^^^^^
   |
note: this function must return a value
  --> $DIR/async-entry.rs:65:5
   |
65 |     fn rocket() {
   |     ^^^^^^^^^^^
   = note: this error originates in the attribute macro `rocket::launch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: attribute cannot be applied to `main` function
  --> $DIR/async-entry.rs:79:5
   |
79 |     #[rocket::launch]
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: this attribute generates a `main` function
note: this function cannot be `main`
  --> $DIR/async-entry.rs:80:8
   |
80 |     fn main() -> &'static str {
   |        ^^^^
   = note: this error originates in the attribute macro `rocket::launch` (in Nightly builds, run with -Z macro-backtrace for more info)

error: attribute cannot be applied to `main` function
  --> $DIR/async-entry.rs:87:5
   |
87 |     #[rocket::launch]
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: this attribute generates a `main` function
note: this function cannot be `main`
  --> $DIR/async-entry.rs:88:14
   |
88 |     async fn main() -> _ {
   |              ^^^^
   = note: this error originates in the attribute macro `rocket::launch` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0728]: `await` is only allowed inside `async` functions and blocks
  --> $DIR/async-entry.rs:73:17
   |
72 |     fn rocket() -> _ {
   |        ------ this is not `async`
73 |         let _ = rocket::build().launch().await;
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ only allowed inside `async` functions and blocks

error[E0308]: mismatched types
  --> $DIR/async-entry.rs:35:9
   |
35 |         rocket::build()
   |         ^^^^^^^^^^^^^^^ expected struct `std::string::String`, found struct `Rocket`
   |
   = note: expected struct `std::string::String`
              found struct `Rocket<Build>`

error[E0308]: mismatched types
  --> $DIR/async-entry.rs:44:9
   |
44 |         "hi".to_string()
   |         ^^^^^^^^^^^^^^^^ expected struct `Rocket`, found struct `std::string::String`
   |
   = note: expected struct `Rocket<Build>`
              found struct `std::string::String`

error[E0308]: mismatched types
  --> $DIR/async-entry.rs:24:21
   |
24 |       async fn main() {
   |                       ^ expected `()` because of default return type
   |  _____________________|
   | |
25 | |         rocket::build()
26 | |     }
   | |     ^- help: consider using a semicolon here: `;`
   | |_____|
   |       expected `()`, found struct `Rocket`
   |
   = note: expected unit type `()`
                 found struct `Rocket<Build>`

error[E0308]: mismatched types
  --> $DIR/async-entry.rs:33:26
   |
33 |     async fn rocket() -> String {
   |                          ^^^^^^
   |                          |
   |                          expected struct `Rocket`, found struct `std::string::String`
   |                          expected due to this
   |
   = note: expected struct `Rocket<Build>`
              found struct `std::string::String`

error[E0277]: `main` has invalid return type `Rocket<Build>`
  --> $DIR/async-entry.rs:94:20
   |
94 | async fn main() -> rocket::Rocket<rocket::Build> {
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `main` can only return types that implement `Termination`
   |
   = help: consider using `()`, or a `Result`
